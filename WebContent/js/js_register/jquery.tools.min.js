/*
 * jQuery Tools v1.2.7 - The missing UI library for the Web
 * 
 * tabs/tabs.js
 * tabs/tabs.slideshow.js
 * 
 * NO COPYRIGHTS OR LICENSES. DO WHAT YOU LIKE.
 * 
 * http://flowplayer.org/tools/
 * 
 */
(function(B) {
    B.tools = B.tools || {
            version: "v1.2.7"
        },
        B.tools.tabs = {
            conf: {
                tabs: "a",
                current: "current",
                onBeforeClick: null,
                onClick: null,
                effect: "default",
                initialEffect: !1,
                initialIndex: 0,
                event: "click",
                rotate: !1,
                slideUpSpeed: 400,
                slideDownSpeed: 400,
                history: !1
            },
            addEffect: function(F, G) {
                A[F] = G
            }
        };
    var A = {
            "default": function(G, F) {
                this.getPanes().hide().eq(G).show(),
                    F.call()
            },
            fade: function(G, F) {
                var J = this.getConf(),
                    I = J.fadeOutSpeed,
                    H = this.getPanes();
                I ? H.fadeOut(I) : H.hide(),
                    H.eq(G).fadeIn(J.fadeInSpeed, F)
            },
            slide: function(G, F) {
                var H = this.getConf();
                this.getPanes().slideUp(H.slideUpSpeed),
                    this.getPanes().eq(G).slideDown(H.slideDownSpeed, F)
            },
            ajax: function(G, F) {
                this.getPanes().eq(0).load(this.getTabs().eq(G).attr("href"), F)
            }
        },
        E,
        D;
    B.tools.tabs.addEffect("horizontal",
        function(F, I) {
            if (!E) {
                var H = this.getPanes().eq(F),
                    G = this.getCurrentPane();
                D || (D = this.getPanes().eq(0).width()),
                    E = !0,
                    H.show(),
                    G.animate({
                        width: 0
                    }, {
                        step: function(J) {
                            H.css("width", D - J)
                        },
                        complete: function() {
                            B(this).hide(),
                                I.call(),
                                E = !1
                        }
                    }),
                    G.length || (I.call(), E = !1)
            }
        });

    function C(M, L, K) {
        var J = this,
            I = M.add(this),
            H = M.find(K.tabs),
            G = L.jquery ? L : M.children(L),
            F;
        H.length || (H = M.children()),
            G.length || (G = M.parent().find(L)),
            G.length || (G = B(L)),
            B.extend(this, {
                click: function(R, Q) {
                    var P = H.eq(R),
                        O = !M.data("tabs");
                    typeof R == "string" && R.replace("#", "") && (P = H.filter('[href*="' + R.replace("#", "") + '"]'), R = Math.max(H.index(P), 0));
                    if (K.rotate) {
                        var N = H.length - 1;
                        if (R < 0) {
                            return J.click(N, Q)
                        }
                        if (R > N) {
                            return J.click(0, Q)
                        }
                    }
                    if (!P.length) {
                        if (F >= 0) {
                            return J
                        }
                        R = K.initialIndex,
                            P = H.eq(R)
                    }
                    if (R === F) {
                        return J
                    }
                    Q = Q || B.Event(),
                        Q.type = "onBeforeClick",
                        I.trigger(Q, [R]);
                    if (!Q.isDefaultPrevented()) {
                        var S = O ? K.initialEffect && K.effect || "default" : K.effect;
                        A[S].call(J, R,
                                function() {
                                    F = R,
                                        Q.type = "onClick",
                                        I.trigger(Q, [R])
                                }),
                            H.removeClass(K.current),
                            P.addClass(K.current);
                        return J
                    }
                },
                getConf: function() {
                    return K
                },
                getTabs: function() {
                    return H
                },
                getPanes: function() {
                    return G
                },
                getCurrentPane: function() {
                    return G.eq(F)
                },
                getCurrentTab: function() {
                    return H.eq(F)
                },
                getIndex: function() {
                    return F
                },
                next: function() {
                    return J.click(F + 1)
                },
                prev: function() {
                    return J.click(F - 1)
                },
                destroy: function() {
                    H.off(K.event).removeClass(K.current),
                        G.find('a[href^="#"]').off("click.T");
                    return J
                }
            }),
            B.each("onBeforeClick,onClick".split(","),
                function(N, O) {
                    B.isFunction(K[O]) && B(J).on(O, K[O]),
                        J[O] = function(P) {
                            P && B(J).on(O, P);
                            return J
                        }
                }),
            K.history && B.fn.history && (B.tools.history.init(H), K.event = "history"),
            H.each(function(N) {
                B(this).on(K.event,
                    function(O) {
                        J.click(N, O);
                        return O.preventDefault()
                    })
            }),
            G.find('a[href^="#"]').on("click.T",
                function(N) {
                    J.click(B(this).attr("href"), N)
                }),
            location.hash && K.tabs == "a" && M.find('[href="' + location.hash + '"]').length ? J.click(location.hash) : (K.initialIndex === 0 || K.initialIndex > 0) && J.click(K.initialIndex)
    }
    B.fn.tabs = function(F, H) {
        var G = this.data("tabs");
        G && (G.destroy(), this.removeData("tabs")),
            B.isFunction(H) && (H = {
                onBeforeClick: H
            }),
            H = B.extend({},
                B.tools.tabs.conf, H),
            this.each(function() {
                G = new C(B(this), F, H),
                    B(this).data("tabs", G)
            });
        return H.api ? G : this
    }
})(jQuery);
(function(B) {
    var A;
    A = B.tools.tabs.slideshow = {
        conf: {
            next: ".forward",
            prev: ".backward",
            disabledClass: "disabled",
            autoplay: !1,
            autopause: !0,
            interval: 3000,
            clickable: !0,
            api: !1
        }
    };

    function C(O, N) {
        var M = this,
            L = O.add(this),
            K = O.data("tabs"),
            J,
            I = !0;

        function H(Q) {
            var P = B(Q);
            return P.length < 2 ? P : O.parent().find(Q)
        }
        var G = H(N.next).click(function() {
                K.next()
            }),
            F = H(N.prev).click(function() {
                K.prev()
            });

        function E() {
            J = setTimeout(function() {
                    K.next()
                },
                N.interval)
        }
        B.extend(M, {
                getTabs: function() {
                    return K
                },
                getConf: function() {
                    return N
                },
                play: function() {
                    if (J) {
                        return M
                    }
                    var P = B.Event("onBeforePlay");
                    L.trigger(P);
                    if (P.isDefaultPrevented()) {
                        return M
                    }
                    I = !1,
                        L.trigger("onPlay"),
                        L.on("onClick", E),
                        E();
                    return M
                },
                pause: function() {
                    if (!J) {
                        return M
                    }
                    var P = B.Event("onBeforePause");
                    L.trigger(P);
                    if (P.isDefaultPrevented()) {
                        return M
                    }
                    J = clearTimeout(J),
                        L.trigger("onPause"),
                        L.off("onClick", E);
                    return M
                },
                resume: function() {
                    I || M.play()
                },
                stop: function() {
                    M.pause(),
                        I = !0
                }
            }),
            B.each("onBeforePlay,onPlay,onBeforePause,onPause".split(","),
                function(P, Q) {
                    B.isFunction(N[Q]) && B(M).on(Q, N[Q]),
                        M[Q] = function(R) {
                            return B(M).on(Q, R)
                        }
                }),
            N.autopause && K.getTabs().add(G).add(F).add(K.getPanes()).hover(M.pause, M.resume),
            N.autoplay && M.play(),
            N.clickable && K.getPanes().click(function() {
                K.next()
            });
        if (!K.getConf().rotate) {
            var D = N.disabledClass;
            K.getIndex() || F.addClass(D),
                K.onBeforeClick(function(Q, P) {
                    F.toggleClass(D, !P),
                        G.toggleClass(D, P == K.getTabs().length - 1)
                })
        }
    }
    B.fn.slideshow = function(E) {
        var D = this.data("slideshow");
        if (D) {
            return D
        }
        E = B.extend({},
                A.conf, E),
            this.each(function() {
                D = new C(B(this), E),
                    B(this).data("slideshow", D)
            });
        return E.api ? D : this
    }
})(jQuery);



function getCheckCode() {
    var info = { 'phone': $('#mobile_phone').val() };
    $.ajax({
        data: info,
        type: "post",
        dataType: 'json',
        url: 'user/getCheckCodePhone.do',
        cache: false,
        async: true,
        error: function(data) {
            window.location.href = 'code.html';
        },
        success: function(data) {
            $('#individual_sendVerifyCode').val('已发送');
        }
    });
}

function register() {
    var info = new Object();
    info.id = $('#individualForm_verifycode').val();
    info.name = "个人:" + $('#verifyCode').val();
    info.password = $('#individual_password').val();
    info.phone = $('#mobile_phone').val();
    info.mail = $('#individual_emailAddress').val();

    $('#individual_reppassword').val();


    $.ajax({
        data: info,
        type: "post",
        dataType: 'json',
        url: 'user/register',
        cache: false,
        async: true,
        error: function(data) {
            window.location.href = "register.html";
        },
        success: function(data) {
            if (data.data.indexOf('Error') >= 0) {
                alert(data.data);
            } else {
                alert("注册成功！" + data.data);
                window.location.href = "login.html";
            }
        }
    });
}

function ctrl() {
    var img = document.getElementById("vimage");
    //切换验证码的原理是点击就重新将src设置一下，但是浏览器有缓存，所以我们需要在后面添加                     一个参数来让浏览器不断发送请求，后面加的参数为时间，因为时间是不断变化的
    img.src = "Image.do?a=" + new Date().getTime();

}